import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "../styles/adminpage.module.css";
import { useRouter } from "next/router";
import withAuth from "../hoc/withAuth";
import axios from "axios";
import { useState, useEffect } from "react";

const inter = Inter({ subsets: ["latin"] });

const Homeadmin = () => {
  const router = useRouter();
  const [windowWidth, setWindowWidth] = useState(1000);
  useEffect(() => {
    if (typeof window !== 'undefined') {
      const updateWindowWidth = () => {
        setWindowWidth(window.innerWidth);
      };

      // Set initial width
      updateWindowWidth();
      window.addEventListener('resize', updateWindowWidth);
      return () => {
        window.removeEventListener('resize', updateWindowWidth);
      };
    }
  }, []); // Empty dependency array ensures this runs only once

  useEffect(() => {
    const clearLocalStorage = () => {
      localStorage.removeItem('token'); 
    };

    window.addEventListener("beforeunload", clearLocalStorage);

    return () => {
      window.removeEventListener("beforeunload", clearLocalStorage);
    };
  }, []);

  const [car, setCar] = useState({
    car: "",
    price: "",
    vin: "",
    mileage: "",
    picturelink: "",
    picturelink2: "",
    picturelink3: "",
    picturelink4: "",
    picturelink5: "",
    secondhand: false,
    extcolor: "",
    intcolor: "",
    drivetrain: "",
    description: "",
  });

  const handleChange = (e) => {
    setCar(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }));
  };

  const handleSecondhand = (e) => {
    setCar(prev => ({
      ...prev,
      secondhand: e.target.checked
    }));
  };

  const newRequest = axios.create({
    baseURL: 'https://garrymotorsllc.onrender.com/api/car',
    withCredentials: true,
  });

  const handleSubmit = async (e) => {
    e.preventDefault();
    try{
      await newRequest.post("/register", car);
      setCar({
        car: "",
        price: "",
        vin: "",
        mileage: "",
        picturelink: "",
        picturelink2: "",
        picturelink3: "",
        picturelink4: "",
        picturelink5: "",
        secondhand: false,
        extcolor: "",
        intcolor: "",
        drivetrain: "",
        description: "",
      });
      alert("Car added");
    } catch (error) {
      console.log(error);
    }
  }

  const handleLogout = () => {
    localStorage.removeItem('token');
    router.push('/Login');
  }

  const handleDelete = () => {
    router.push('/delete');
  }

  return (
    <>
      <Head>
        <title>Garry Motors | Admin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="garry1.jpg" />
      </Head>
      <main>
        <div className={styles.nav}>
          <button className={styles.delcar} onClick={handleDelete}>Delete Car</button>
          <button className={styles.logout} onClick={handleLogout}>Logout</button>
        </div>
        <div className={styles.register}>
          <form className={styles.form} onSubmit={handleSubmit}>
            <div className={styles.left}>
              <h1 className={styles.h1}>Add a new car</h1>
              <label className={styles.label}>Car Model</label>
              <input className={styles.input} name="car" type="text" value={car.car} required onChange={handleChange} />
              <label className={styles.label}>Price</label>
              <input className={styles.input} name="price" type="number" value={car.price} required onChange={handleChange} />
              <label className={styles.label}>VIN</label>
              <input className={styles.input} name="vin" type="text" value={car.vin} required onChange={handleChange} />
              <label className={styles.label}>Mileage</label>
              <input className={styles.input} name="mileage" type="number" value={car.mileage} required onChange={handleChange} />
              <label className={styles.label}>Google Car Picture Link</label>
              <input className={styles.input} name="picturelink" type="url" value={car.picturelink} required onChange={handleChange} />
              <input className={styles.input} name="picturelink2" type="url" value={car.picturelink2} required onChange={handleChange} />
              <input className={styles.input} name="picturelink3" type="url" value={car.picturelink3} onChange={handleChange} />
              <input className={styles.input} name="picturelink4" type="url" value={car.picturelink4} onChange={handleChange} />
              <input className={styles.input} name="picturelink5" type="url" value={car.picturelink5} onChange={handleChange} />
              {windowWidth > 1000 && <button className={styles.btn} type="submit">Add</button>}
            </div>
            <div className={styles.right}>
              <div className={styles.toggle}>
                <label className={styles.label}>Second Hand</label>
                <label className={`${styles.label} ${styles.switch}`}>
                  <input className={styles.input} name="secondhand" type="checkbox" checked={car.secondhand} onChange={handleSecondhand} />
                  <span className={`${styles.slider} ${styles.round}`}></span>
                </label>
              </div>
              <label className={styles.label}>Exterior Color</label>
              <input className={styles.input} name="extcolor" type="text" value={car.extcolor} required onChange={handleChange} />
              <label className={styles.label}>Interior Color</label>
              <input className={styles.input} name="intcolor" type="text" value={car.intcolor} required onChange={handleChange} />
              <label className={styles.label}>Drivetrain</label>
              <input className={styles.input} name="drivetrain" type="text" value={car.drivetrain} required onChange={handleChange} />
              <label className={styles.label}>Description</label>
              <textarea className={styles.textarea} placeholder="A short description" name="description" cols="30" rows="10" value={car.description} required onChange={handleChange}></textarea>
            </div>
            {windowWidth < 1000 && <button className={styles.btn} type="submit">Add</button>}
          </form>
        </div>
      </main>
    </>
  );
}

export default withAuth(Homeadmin);
